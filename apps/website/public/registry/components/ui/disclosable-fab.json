{
  "name": "disclosable-fab",
  "files": [
    {
      "name": "disclosable-fab.tsx",
      "content": "\"use client\";\n\nimport React, { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { Plus, LucideIcon } from \"lucide-react\";\n\nexport interface MenuItemProps {\n  title: string;\n  description: string;\n  icon: LucideIcon;\n  onClick?: () => void;\n}\n\ninterface DisclosableFabProps {\n  menuItems: MenuItemProps[];\n  width?: number;\n  height?: number;\n  backgroundColor?: string;\n  darkBackgroundColor?: string;\n}\n\nexport default function DisclosableFab({\n  menuItems,\n  width = 320,\n  height = 280,\n  backgroundColor = \"bg-white\",\n  darkBackgroundColor = \"dark:bg-[#1f1f1f]\",\n}: DisclosableFabProps) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <div className=\"relative h-[400px] w-full flex items-center justify-center bg-background dark:bg-background\">\n      <motion.div\n        initial={false}\n        animate={isOpen ? \"open\" : \"closed\"}\n        className=\"relative\"\n      >\n        <motion.div\n          variants={{\n            open: {\n              width,\n              height,\n              borderRadius: 16,\n            },\n            closed: {\n              width: 56,\n              height: 56,\n              borderRadius: 28,\n            },\n          }}\n          transition={{ type: \"spring\", stiffness: 500, damping: 30 }}\n          className={`overflow-hidden ${backgroundColor} ${darkBackgroundColor} shadow-lg border border-[#e5e5e5] dark:border-[#404040]`}\n        >\n          <AnimatePresence mode=\"wait\">\n            <motion.div\n              key=\"content\"\n              initial=\"closed\"\n              animate={isOpen ? \"open\" : \"closed\"}\n              exit=\"closed\"\n              variants={{\n                open: {\n                  opacity: 1,\n                  transition: { staggerChildren: 0.07, delayChildren: 0.2 },\n                },\n                closed: {\n                  opacity: 0,\n                  transition: { staggerChildren: 0.05, staggerDirection: -1 },\n                },\n              }}\n              className={`absolute inset-0 ${isOpen ? \"p-4 space-y-2\" : \"\"}`}\n            >\n              {isOpen &&\n                menuItems.map((item) => (\n                  <motion.button\n                    key={item.title}\n                    variants={{\n                      open: { opacity: 1, y: 0 },\n                      closed: { opacity: 0, y: 20 },\n                    }}\n                    onClick={item.onClick}\n                    className=\"flex w-full items-center space-x-3 rounded-lg p-2 transition-colors hover:bg-[#f7f7f7] dark:hover:bg-[#333333]\"\n                  >\n                    <div className=\"flex h-10 w-10 items-center justify-center rounded-lg bg-[#f7f7f7] dark:bg-[#333333]\">\n                      <item.icon className=\"h-5 w-5 text-[#525252] dark:text-[#d1d1d1]\" />\n                    </div>\n                    <div className=\"flex-1 text-left\">\n                      <h3 className=\"text-sm font-medium text-[#171717] dark:text-[#f7f7f7]\">\n                        {item.title}\n                      </h3>\n                      <p className=\"text-xs text-[#737373] dark:text-[#a3a3a3]\">\n                        {item.description}\n                      </p>\n                    </div>\n                  </motion.button>\n                ))}\n            </motion.div>\n          </AnimatePresence>\n\n          <motion.button\n            className=\"absolute top-0 right-0 flex items-center justify-center w-14 h-14 text-[#171717] dark:text-[#f7f7f7]\"\n            onClick={() => setIsOpen(!isOpen)}\n            animate={isOpen ? \"open\" : \"closed\"}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            aria-label={isOpen ? \"Close menu\" : \"Open menu\"}\n          >\n            <motion.div\n              variants={{\n                open: { rotate: 135, y: 2 },\n                closed: { rotate: 0, y: 0 },\n              }}\n              transition={{ duration: 0.2 }}\n            >\n              <Plus className=\"h-6 w-6\" />\n            </motion.div>\n          </motion.button>\n        </motion.div>\n      </motion.div>\n    </div>\n  );\n}\n"
    }
  ],
  "type": "components:ui"
}