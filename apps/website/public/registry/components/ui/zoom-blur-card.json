{
  "name": "zoom-blur-card",
  "files": [
    {
      "name": "zoom-blur-card.tsx",
      "content": "import React, { useState } from \"react\";\nimport Image from \"next/image\";\nimport { motion } from \"framer-motion\";\n\ninterface ZoomBlurCardProps {\n  title: string;\n  description: string;\n  imageUrl: string;\n}\n\nconst ZoomBlurCard: React.FC<ZoomBlurCardProps> = ({\n  title,\n  description,\n  imageUrl,\n}) => {\n  const [isHovered, setIsHovered] = useState(false);\n\n  return (\n    <div className=\"hover:cursor-pointer\">\n      <motion.div\n        className=\"relative w-full h-64 bg-white/90 rounded-lg shadow-md overflow-hidden group transition-all duration-300 ease-in-out hover:bg-white/70\"\n        onHoverStart={() => setIsHovered(true)}\n        onHoverEnd={() => setIsHovered(false)}\n      >\n        <div className=\"absolute inset-0 overflow-hidden bg-[#111111] dark:bg-[#111111]\">\n          <Image\n            src={imageUrl}\n            alt={title}\n            layout=\"fill\"\n            objectFit=\"cover\"\n            className=\"transition-all duration-300 ease-in-out group-hover:scale-110 opacity-60 group-hover:opacity-70 group-hover:blur-sm\"\n          />\n        </div>\n        <div className=\"relative z-10 p-4 h-full flex flex-col justify-between text-white\">\n          <div className=\"self-end px-4 py-2 group-hover:rotate-[-45deg] transition-all duration-500\">\n            <FaArrowRightLong />\n          </div>\n          <div>\n            <ZoomBlurCardTitle\n              isHovered={isHovered}\n              className=\"text-2xl font-extrabold mb-4\"\n            >\n              {title}\n            </ZoomBlurCardTitle>\n            <p className=\"text-sm\">{description}</p>\n          </div>\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n\nimport clsx from \"clsx\";\nimport { FaArrowRightLong } from \"react-icons/fa6\";\n\ninterface ZoomBlurCardTitleProps {\n  children: string;\n  isHovered: boolean;\n  duration?: number;\n  stagger?: number;\n  fontSize?: string;\n  fontWeight?: string | number;\n  textTransform?: \"uppercase\" | \"lowercase\" | \"capitalize\" | \"none\";\n  initialColor?: string;\n  hoverColor?: string;\n  lineHeight?: number | string;\n  easing?: string;\n  className?: string;\n}\n\nconst ZoomBlurCardTitle: React.FC<ZoomBlurCardTitleProps> = ({\n  children,\n  isHovered,\n  duration = 0.25,\n  stagger = 0.025,\n  hoverColor = \"white\",\n  lineHeight = 0.9,\n  easing = \"easeInOut\",\n  className,\n}) => {\n  return (\n    <motion.div\n      className={clsx(\n        \"relative block overflow-hidden whitespace-nowrap\",\n        \"transition-colors duration-300\",\n        className,\n      )}\n      style={{ lineHeight }}\n    >\n      <motion.div>\n        {children.split(\"\").map((letter, index) => (\n          <motion.span\n            key={index}\n            initial={{ y: 0 }}\n            animate={isHovered ? { y: \"-100%\" } : { y: 0 }}\n            transition={{\n              duration,\n              ease: easing,\n              delay: stagger * index,\n            }}\n            className=\"inline-block\"\n          >\n            {letter}\n          </motion.span>\n        ))}\n      </motion.div>\n      <motion.div className=\"absolute inset-0\">\n        {children.split(\"\").map((letter, index) => (\n          <motion.span\n            key={index}\n            initial={{ y: \"100%\" }}\n            animate={isHovered ? { y: 0 } : { y: \"100%\" }}\n            transition={{\n              duration,\n              ease: easing,\n              delay: stagger * index,\n            }}\n            className={clsx(\"inline-block\", `text-${hoverColor}`)}\n          >\n            {letter}\n          </motion.span>\n        ))}\n      </motion.div>\n    </motion.div>\n  );\n};\n\nexport default ZoomBlurCard;\n"
    }
  ],
  "type": "components:ui"
}