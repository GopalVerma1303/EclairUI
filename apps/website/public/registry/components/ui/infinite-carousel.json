{
  "name": "infinite-carousel",
  "files": [
    {
      "name": "infinite-carousel.tsx",
      "content": "\"use client\";\n\nimport React, { useRef, useEffect } from \"react\";\nimport Image from \"next/image\";\n\ninterface InfiniteCarouselItemProps {\n  src: string;\n  width: number;\n  height: number;\n}\n\nconst InfiniteCarouselItem: React.FC<InfiniteCarouselItemProps> = ({\n  src,\n  width,\n  height,\n}) => (\n  <li className=\"mx-4\">\n    <Image\n      src={src}\n      alt={`Logo ${src}`}\n      width={width}\n      height={height}\n      className=\"object-contain max-w-none filter dark:invert\"\n    />\n  </li>\n);\n\ninterface InfiniteCarouselProps {\n  images: string[];\n  direction?: \"left\" | \"right\";\n  speed?: number;\n  itemWidth: number;\n  itemHeight: number;\n}\n\nconst InfiniteCarousel: React.FC<InfiniteCarouselProps> = ({\n  images,\n  direction = \"left\",\n  speed = 25,\n  itemWidth,\n  itemHeight,\n}) => {\n  const logoListRef = useRef<HTMLUListElement>(null);\n\n  useEffect(() => {\n    if (logoListRef.current) {\n      const clone = logoListRef.current.cloneNode(true) as HTMLUListElement;\n      clone.setAttribute(\"aria-hidden\", \"true\");\n      logoListRef.current.parentNode?.insertBefore(\n        clone,\n        logoListRef.current.nextSibling,\n      );\n    }\n  }, []);\n\n  const animationDirection = direction === \"left\" ? \"normal\" : \"reverse\";\n  const animationDuration = `${speed}s`;\n\n  return (\n    <div className=\"w-full mx-auto inline-flex flex-nowrap overflow-hidden [mask-image:_linear-gradient(to_right,transparent_0,_black_128px,_black_calc(100%-128px),transparent_100%)]\">\n      <ul\n        ref={logoListRef}\n        className=\"flex items-center justify-center md:justify-start\"\n        style={{\n          animation: `scroll ${animationDuration} linear infinite ${animationDirection}`,\n        }}\n      >\n        {images.concat(images).map((src, index) => (\n          <InfiniteCarouselItem\n            key={index}\n            src={src}\n            width={itemWidth}\n            height={itemHeight}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default InfiniteCarousel;\n"
    }
  ],
  "type": "components:ui"
}